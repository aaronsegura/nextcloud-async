[build-system]
requires = ['setuptools>=68.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'nextcloud_async'
version = '0.1.0b0'
authors = [
  { name='Aaron Segura' },
]
description = 'Asynchronous client library for Nextcloud'
readme = 'README.md'
license = { text='License :: OSI Approved :: GNU General Public License v3 (GPLv3)' }
requires-python = '>=3.10'
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Framework :: Pytest',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.10',
    'Typing :: Typed']

keywords = ['nextcloud', 'asynchronous', 'spreed']

dependencies = [
  'httpx>=0.28,<1',
  'xmltodict>=0.14,<1',
  'platformdirs>=4.3,<5',
  'typing-extensions>=4.12,<5',
  'aiofile>=3.9.0,<4',
  'python-dateutil>=2.9.0,<3']

[project.optional-dependencies]
dev = [
  'pytest>=8.3,<9',
  'pytest-recording>=0.13,<1',
  'pytest-asyncio>=0.25,<1',
  'pytest-cov>=6.0,<7',
  'pytest-order>=1.3.0,<2']

[project.urls]
'Homepage' = 'https://github.com/aaronsegura/nextcloud-async'
'Bug Tracker' = 'https://github.com/aaronsegura/nextcloud-async/issues'

[tool.ruff]  # https://docs.astral.sh/ruff/
exclude = [
  'temp.py',
  'build',
  'dist',
  '*.egg-info',
  ]

line-length = 120
select = [
  'D',      # pydocstyle
  'E',      # pycodestyle
  'F',      # pyflakes
  'N',      # pep8-naming
  'ANN',    # flake8-annotations
  'ARG',    # flake8-arguments
  'ASYNC',  # flake8-async
  'COM',    # flake8-comma
  'C4',     # flake8-comprehensions
  'DOC',    # pydoclint
  'DTZ',    # flake8-datetimez
  'ERA',    # flake8-eradicate
  'FIX',    # flake8-fix
  'ICN',    # flake8-import-conventions
  'PL',     # pylint
  # 'PT',     # flake8-pytest
  'SLF',    # flake8-self,
  'T20',    # flake8-print
  'TC',     # flake8-type-checking
  'TD',     # flake9-todos
]

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint]
ignore = [
  'D100',     # Missing docstring in public module
  'D101',     # Missing docstring in public class
  'D104',     # Missing docstring in public package
  'D105',     # Missing docstring in magic method
  'D107',     # Missing docstring in __init__
  'D203',     # 1 blank line required before class docstring
  # 'D213',  # Multi-line docstring summary should start at the second line
  'ANN401',   # Dynamically typed expressions (typing.Any) are disallowed
  'TD002',    # Missing author in TODO
  'PLR0913',   # tOo MaNy ArGuMeNtS
  'TD003',     # Missing issue link for Todo
  'TC004',    # Move import out of type-checking block
  ]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  'D',
  'ANN201',
  'ANN001']

[tool.ruff.pydocstyle]
convention = 'google'  # https://google.github.io/styleguide/pyguide.html

[tool.ruff.lint.pycodestyle]
max-line-length = 90

[tool.ruff.mccabe]
max-complexity = 10

[tool.pyright]
reportOptionalMemberAccess = false
ignore = ['alembic']
typeCheckingMode = 'basic'
reportUnnecessaryTypeIgnoreComment = 'warning'

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = 'function'
